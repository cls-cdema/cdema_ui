trigger:
  - master
  - next
  - hotfix/*
  - bugfix/*

pool:
  vmImage: 'ubuntu-latest'

variables:
  NPM_CACHE_FOLDER: $(Pipeline.Workspace)/.npm

steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '10.x'
    displayName: 'Install Node.js'

  - task: Cache@2
    inputs:
      key: 'npm | "$(Agent.OS)" | package-lock.json'
      path: "$(NPM_CACHE_FOLDER)"
      restoreKeys: |
        npm | "$(Agent.OS)"
        npm
    displayName: 'Cache NPM packages'

  - script: |
      mkdir -p $(NPM_CACHE_FOLDER)
      npm ci
    displayName: 'npm install'

  - script: |
      npm run build
    displayName: 'npm run build'

  - script: |
      npm run semantic-release
    displayName: 'npm run semantic-release'

  - script: |
      npm run build:storybook
    displayName: 'npm run build:storybook'

  - task: PublishPipelineArtifact@1
    inputs:
      targetPath: "./docs"
      artifact: "wfp-ui-kit-build"
      publishLocation: "pipeline"

#  - task: ArchiveFiles@2
#    condition: or(eq(variables['Build.SourceBranch'], 'refs/heads/master'), startsWith(variables['Build.SourceBranch'], 'refs/heads/next'))
#    inputs:
#     rootFolderOrFile: "$(System.DefaultWorkingDirectory)/docs"
#      includeRootFolder: true
#      archiveType: "zip"
#      archiveFile: "$(Build.ArtifactStagingDirectory)/build-$(Build.BuildId).zip"
#      replaceExistingArchive: true

#  - task: PublishBuildArtifacts@1
#    inputs:
#      PathtoPublish: "$(Build.ArtifactStagingDirectory)"
#      ArtifactName: "wfp-ui-kit-build"
#      publishLocation: "Container"

#  - task: Bash@3
#    inputs:
#      targetType: 'inline'
#      script: |
#        PACKAGE_VERSION=$(sed -nE 's/^\s*"version": "(.*?)",$/\1/p' package.json)
#        echo "Package version"
#        echo $PACKAGE_VERSION
#        NPM_VERSION=${PACKAGE_VERSION//./-}
#        echo $NPM_VERSION
#        echo '##vso[task.setvariable variable=NPM_VAR]'$NPM_VERSION' 

#  - task: S3Upload@1
#    inputs:
#      awsCredentials: 'WFP UI-Kit'
#      regionName: 'eu-west-1'
#      bucketName: 'uikit.wfp.org'
#      sourceFolder: './dist'
#      globExpressions: '**'
#      targetFolder: 'cdn/$(NPM_VAR)'
#      filesAcl: 'public-read'
#      createBucket: true
#      logRequest: true
#      logResponse: true

#  - task: S3Upload@1
#    inputs:
#      awsCredentials: 'WFP UI-Kit'
#      regionName: 'eu-west-1'
#      bucketName: 'uikit.wfp.org'
#      sourceFolder: './docs'
#      globExpressions: '**'
#      targetFolder: 'next-docs'
#      filesAcl: 'public-read'
#      createBucket: true
#      logRequest: true
#      logResponse: true